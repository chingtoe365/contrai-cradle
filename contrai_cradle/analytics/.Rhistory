setwd("C:\Users\p0089475\Workspace\VM\ubuntu16\sync\contrai-cradle\contrai_cradle\analytics")
setwd("C:/Users/p0089475/Workspace/VM/ubuntu16/sync/contrai-cradle/contrai_cradle/analytics")
getwd()
clauses = read.csv('cleaned_clauses.csv')
clauses
str(clauses)
pivot_table
clauses = read.csv('clause_with_wc.csv')
clauses
library(ggpubr)
istall.packages("ggpubr")
install.packages("ggpubr")
library(ggpubr)
#ggboxplot(clauses, x = "", y = "len", add = "jitter")
colnames(clauses)
ggboxplot(clauses, x = "label", y = "wordCount", add = "jitter")
labels = read.csv("tag_list.csv")
#label_map <- function(x){labels}
labels
labels[0]
colnames(labels)
colnames(labels) = c("index", "label")
label_map <- function(x){labels['index'] == x]}
label_map <- function(x){labels[labels['index'] == x['label'], "label"]}
clauses.apply(label_map, axis=2)
apply(clauses, label_map, axis=2)
apply(label_map, clauses, axis=2)
apply(clauses, MARGIN = 1, FUN = label_map)
apply(clauses, MARGIN = 1, FUN = label_map)[0]
unlist(apply(clauses, MARGIN = 1, FUN = label_map))
clauses['label_text']= unlist(apply(clauses, MARGIN = 1, FUN = label_map))
label_map
label_map()
apply(clauses, MARGIN = 1, FUN = label_map)[0]
apply(clauses, MARGIN = 1, FUN = label_map)
unlist(apply(clauses, MARGIN = 1, FUN = label_map))
apply(clauses, MARGIN = 1, FUN = label_map)
clauses["label_text"] = apply(clauses, MARGIN = 1, FUN = label_map)
clauses
label_map <- function(x){labels[labels['index'] == x['label'], "label"]}
label_map <- function(x){
l= labels[labels['index'] == x['label'], "label"]
if(length(l)>0){
return(l)
}
else{
return(NA)
}
}
clauses["label_text"] = unlist(apply(clauses, MARGIN = 1, FUN = label_map))
ggboxplot(clauses, x = "label_text", y = "wordCount", add = "jitter", color = "supp", palette = "npg")
ggboxplot(clauses, x = "label_text", y = "wordCount", add = "jitter", palette = "npg")
ggboxplot(clauses, x = "label_text", y = "wordCount", add = "jitter", palette = "npg", las=3)
fig<-ggboxplot(clauses, x = "label_text", y = "wordCount", add = "jitter", palette = "npg")
fig + rotate_x_text()
fig + rotate_x_text(45)
length(labels)
labels
dim(labels)
unique(clauses$label)
clauses %>% count(label, sort = TRUE)
library(dplyr)
clauses %>% count(label, sort = TRUE)
clauses %>% count(label_text, sort = TRUE)
clauses %>% count(label_text)
wordCount['sampleCount'] = clauses %>% count(label_text)
clauses %>% count(label)
clauses[clauses$label == 0, 1]
clauses[clauses$label == 0]
clauses[clauses$label == 0, ]
clauses[clauses$wordCount > 512, 1]
clauses$wordCount > 512
clauses[22,]
clauses[22,"text"]
clauses[22,"text"].split(" ")
length(strsplit(clauses[22,"text"], " "))
length(strsplit("  ", clauses[22,"text"]))
clauses$wordCount > 512
clauses[65,"text"]
clauses[66,"text"]
clauses$wordCount > 1000
clauses[471,"text"]
clauses$label
labels
unlist(apply(clauses, MARGIN = 1, FUN = label_map))
clauses[13,"label"]
clauses[18,"label"]
clauses[18,"label"] + 1
sum(labels$index == 18)
match(clauses$label, labels)
match(labels$index, clauses$label)
match(clauses$label, labels$index)
labels[match(clauses$label, labels$index), "label"]
clauses$label_text = labels[match(clauses$label, labels$index), "label"]
fig<-ggboxplot(clauses, x = "label_text", y = "wordCount", add = "jitter", palette = "npg")
clauses$label_text
fig<-ggboxplot(clauses, x = "label_text", y = "wordCount", add = "jitter", palette = "npg")
fig + rotate_x_text(45)
clauses %>% count(label_text)
label_sample_count <- clauses %>% count(label_text)
fig<-ggboxplot(label_sample_count, x = "label_text", y = "n", palette = "npg")
fig
p<-ggplot(data=label_sample_count, aes(x="label_text", y="n")) +geom_bar(stat="identity")
p
library(ggplot2)
p<- ggplot(data=label_sample_count, aes(x=label_text, y=n))
p
p<- ggplot(data=label_sample_count, aes(x=label_text, y=n))+ geom_bar(stat="identity")
p
p + rotate_x_text(45)
p<- ggplot(data=label_sample_count, aes(x=label_text, y=n))+ geom_bar(stat="identity", fill="steelblue")
p + rotate_x_text(45)
save.image("C:/Users/p0089475/Workspace/VM/ubuntu16/sync/contrai-cradle/contrai_cradle/analytics/RWorkspace.RData")
